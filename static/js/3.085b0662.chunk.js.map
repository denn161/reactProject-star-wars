{"version":3,"sources":["components/PersonPage/PersonFilms/PersonFilms.module.css","components/PersonPage/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","personFilms","useState","filmsName","setFilmsName","useEffect","a","makeConcurrentRequest","response","className","styles","wrapper","list__container","sort","b","episode_id","map","title","list__item","style","color","item__episode","item__colon","item__title"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,WAAa,gCAAgC,cAAgB,mCAAmC,YAAc,iCAAiC,YAAc,mC,yJCsC9PC,EAnCK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEnB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAUF,OAREC,qBAAU,WACN,sBAAC,4BAAAC,EAAA,sEAC0BC,YAAsBN,GADhD,OACSO,EADT,OAEOJ,EAAaI,GAFpB,0CAAD,KAMD,IAED,qBAAKC,UAAWC,IAAOC,QAAvB,SACI,oBAAIF,UAAWC,IAAOE,gBAAtB,SACKT,EAAUU,MAAK,SAACP,EAAEQ,GAAH,OAAOR,EAAES,WAAWD,EAAEC,cACjCC,KAAI,gBAAGC,EAAH,EAAGA,MAAOF,EAAV,EAAUA,WAAV,OACD,qBAAIN,UAAWC,IAAOQ,WAElBC,MAAO,CAAEC,MAAO,SAFpB,UAGA,uBAAMX,UAAWC,IAAOW,cAAxB,qBAAgDN,KAChD,sBAAMN,UAAWC,IAAOY,YAAxB,eACA,sBAAMb,UAAWC,IAAOa,YAAxB,SAAsCN,MAJ7BF","file":"static/js/3.085b0662.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PersonFilms_wrapper__6xoTa\",\"list__container\":\"PersonFilms_list__container__SO9Ei\",\"list__item\":\"PersonFilms_list__item__D5uIS\",\"item__episode\":\"PersonFilms_item__episode__2s7p2\",\"item__colon\":\"PersonFilms_item__colon__jBL8F\",\"item__title\":\"PersonFilms_item__title__3QchI\"};","import styles from './PersonFilms.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { makeConcurrentRequest } from '@utils/network';\r\nimport { useState,useEffect } from 'react';\r\nconst PersonFilms = ({ personFilms }) => {\r\n      \r\n    const [filmsName, setFilmsName] = useState([]);   \r\n\r\n    useEffect(() => {        \r\n        (async () => {\r\n            const response = await makeConcurrentRequest(personFilms);         \r\n                setFilmsName(response);          \r\n\r\n        })();\r\n\r\n    }, []);\r\n  return (\r\n      <div className={styles.wrapper}>\r\n          <ul className={styles.list__container}>\r\n              {filmsName.sort((a,b)=>a.episode_id-b.episode_id)\r\n                  .map(({ title, episode_id }) => (\r\n                      <li className={styles.list__item}\r\n                          key={episode_id}\r\n                          style={{ color: \"white\" }}>\r\n                      <span className={styles.item__episode}>Episode:{episode_id}</span>\r\n                      <span className={styles.item__colon}>:</span>\r\n                      <span className={styles.item__title}>{title}</span>\r\n                  </li>\r\n             ))}          \r\n          </ul>        \r\n      \r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nPersonFilms.propTypes = {\r\n  personFilms: PropTypes.array\r\n}\r\nexport default PersonFilms;"],"sourceRoot":""}